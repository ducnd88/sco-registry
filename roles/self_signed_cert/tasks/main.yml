---

- name: install openssl packages
  package:
    name: openssl
    state: present

- name: add hostname to hosts
  lineinfile:
    path: /etc/hosts
    regexp: '^127.0.0.1 {{ hostname }}'
    insertafter: '^::1 '
    line: 127.0.0.1 {{ hostname }}
  when: hostname is defined

- name: create {{ root_ca_name }} private key
  command: openssl genrsa -out {{ root_ca_name }}.key 2048

- name: create self-signed Certificate
  command: >
    openssl req -x509 -new -nodes -key {{ root_ca_name }}.key
    -sha256 -days 36500 -out {{ root_ca_name }}.pem
    -subj "/C=KR/ST=GyeongGi-do/L=Suwon/O=Samsung/OU=Network/CN={{ hostname }}/emailAddress={{ hostname }}@samsung.com"

- name: create {{ server_cert_name }} private key
  command: openssl genrsa -out {{ server_cert_name }}.key 2048

- name: create {{ server_cert_name }} CSR
  command: >
    openssl req -new -key {{ server_cert_name }}.key
    -out {{ server_cert_name }}.csr
    -subj "/C=KR/ST=GyeongGi-do/L=Suwon/O=Samsung/OU=Network/CN={{ hostname }}/emailAddress={{ hostname }}@samsung.com"

- name: config file for signing
  template:
    src: "{{ server_cert_name }}.conf.j2"
    dest: "{{ server_cert_name }}.conf"
    owner: root
    group: root
    mode: 0644
    force: yes

- name: Sign the server certification
  command: >
    openssl x509 -req -in {{ server_cert_name }}.csr
    -CA {{ root_ca_name }}.pem -CAkey {{ root_ca_name }}.key
    -CAcreateserial -out {{ server_cert_name }}.cert
    -days 36500 -extensions v3_req -extfile {{ server_cert_name }}.conf

- name: Check Alternative Name exists
  shell: >
    openssl x509 -in {{ server_cert_name }}.cert -text | grep 'Alternative Name' -A 1
  register: result
  failed_when: 'hostname not in result.stdout'

- name: Copy CA to ca-trust
  copy:
    src: "{{ root_ca_name }}.pem"
    dest: /etc/pki/ca-trust/source/anchors/
    force: yes
    remote_src: yes

- name: Register CA as trusted
  command: update-ca-trust extract

- name: Confirm CA is registered
  shell: trust list | grep {{ hostname }}
  register: result
  failed_when: 'hostname not in result.stdout'
